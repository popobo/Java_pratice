package com.bo.cooperation;

/**
 * 协作模型:生产者消费者实现方式二:信号灯法
 * 借助标志位
 * 
 * @author 33136
 *
 */

public class CoTest02 {
	public static void main(String[] args) {
		Tv tv = new Tv();
		new Player(tv).start();
		new Watcher(tv).start();
	}
}

//生产者 演员
class Player extends Thread {
	Tv tv;
	public Player(Tv tv) {
		this.tv = tv;
	}
	
	@Override
	public void run() {
		for (int i = 0; i < 100; i++) {
			if (i % 2 == 0) {
				this.tv.play("aaaa");
			} else {
				this.tv.play("bbbb");
			}
		}
	}
}

//消费者
class Watcher extends Thread {
	Tv tv;
	public Watcher(Tv tv) {
		this.tv = tv;
	}
	
	@Override
	public void run() {
		for (int i = 0; i < 100; i++) {
			this.tv.watch();;
		}
	}
}

//同一个资源 电视
class Tv {
	String voice;
	//信号灯
	//T 表示演员表演 观众等待
	//F 表示观众观看 演员等地
	boolean flag = true;
	
	//表演
	public synchronized void play(String voice) {
		//演员等待
		if (false == flag) {
			try {
				this.wait();
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
		//表演
		System.out.println("表演了:" + voice);
		this.voice = voice;
		//唤醒
		this.notifyAll();
		//切换标志
		this.flag = !this.flag;
	}
	
	//观看
	public synchronized void watch() {
		//观众等待
		if (true == flag) {
			try {
				this.wait();
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
		//观看
		System.out.println("观看了:" + voice);
		//唤醒
		this.notifyAll();
		//切换标志
		this.flag = !this.flag;
	}
}